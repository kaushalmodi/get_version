os:
  - linux
  # - osx
  # - windows

language: c

cache:
  directories:
    - "${HOME}/.choosenim"
    - upx

env:
  global:
    - REPONAME="$(basename ${TRAVIS_BUILD_DIR})" # /travis/build/kaushalmodi/version -> version
    #
    - TRAVIS_SH_URL="https://gist.github.com/genotrance/fb53504a4fba88bc5201d3783df5c522/raw/travis.sh"
    - UPXVER="3.95"             # Change this value when upgrading upx
    #
    - NIMFILE="${TRAVIS_BUILD_DIR}/src/${REPONAME}.nim"
    - BINFILE="${TRAVIS_BUILD_DIR}/src/${REPONAME}"
    #
    - DIST_DIR="${TRAVIS_BUILD_DIR}/dist"
    - ASSETFILE="${TRAVIS_BUILD_DIR}/${REPONAME}-${TRAVIS_TAG}.Linux_64bit_musl.tar.xz"
  jobs:
    - BRANCH=1.2.0
    - BRANCH=devel

addons:
  apt:
    packages:
      # For building MUSL static builds on Linux.
      - musl-tools

install:
  - curl "${TRAVIS_SH_URL}" -LsSf -o travis.sh
  - source travis.sh
  - |
    if [[ ! -f "${TRAVIS_BUILD_DIR}/upx/${UPXVER}/upx" ]]
    then
      echo "Installing upx .."
      cd "${TRAVIS_BUILD_DIR}"
      curl -OL "https://github.com/upx/upx/releases/download/v${UPXVER}/upx-${UPXVER}-amd64_linux.tar.xz"
      tar xvf "upx-${UPXVER}-amd64_linux.tar.xz"
      mkdir -p "${TRAVIS_BUILD_DIR}/upx"
      mv "upx-${UPXVER}-amd64_linux" "${TRAVIS_BUILD_DIR}/upx/${UPXVER}"
    fi
  - export PATH="${TRAVIS_BUILD_DIR}/upx/${UPXVER}/:${PATH}"
  - nim -v
  - upx --version | grep -E '^upx'

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - nim pullConfig
  - nim musl "${NIMFILE}"
  - eval "${BINFILE} version nim"
  - nim test
  - nim docs

before_deploy:
  - mkdir -p "${DIST_DIR}"
  - cp "${BINFILE}" "${DIST_DIR}"/.
  # -C <DIR> tells tar to change the current directory to <DIR>, and
  # then the "." means "add the entire current directory" (including
  # hidden files and sub-directories).
  - tar caf "${ASSETFILE}" -C "${DIST_DIR}" .

deploy:
  - provider: pages
    token: "${GITHUB_OAUTH_TOKEN}"
    # local_dir *has* to be a relative path from the repo root.
    local_dir: "public"
    cleanup: false
    keep_history: false
    on:
      branch: master
  - provider: releases
    token: "${GITHUB_OAUTH_TOKEN}"
    file: "${ASSETFILE}"
    cleanup: false
    on:
      tags: true

notifications:
  email:
    on_success: never # default: change
    on_failure: always # default: always
